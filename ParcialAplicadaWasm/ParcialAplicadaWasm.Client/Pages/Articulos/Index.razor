@page "/Articulos/Index"

@rendermode InteractiveWebAssembly

@inject IClientService<Articulos> articuloService
<PageTitle>Index de Articulos</PageTitle>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<div class="card shadow-lg">
    <div>
        @*Header*@
        <div class="card-header text-center">
            <h3><strong>Listado de Articulos</strong></h3>
        </div>

        <div class="card-body">
            <div class="row mb-3 align-items-end">
                <div class="col-md-3">
                    <label for="Filtro" class="form-label">Filtrar por:</label>
                    <InputSelect id="filtro" class="form-select" @bind-Value="filtro">
                        <option value="" disabled>Seleccionar</option>
                        <option value="id">ID</option>
                        <option value="descripcion">Descripci&oacute;n</option>
                    </InputSelect>
                </div>
                <div class="col-md-4">
                    <label for="ValorFiltro" class="form-label">B&uacute;squeda:</label>
                    <div class="input-group">
                        <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                        <button class="btn btn-outline-primary" type="button">
                            <span class="bi bi-search"></span> Buscar
                        </button>
                    </div>
                </div>
                <div class="col-md-3">
                    <button class="btn btn-outline-primary" @onclick="Restablecer"> Restablecer</button>
                </div>
                <div class="col-md-2 text-end">
                    <button class="bi bi-plus btn btn-outline-primary" @onclick="Crear"> Crear</button>
                </div>
            </div>
        </div>

        @*Body*@
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ArticuloId</th>
                        <th>Descripci&oacute;n</th>
                        <th>Pct Itbis</th>
                        <th>Costo</th>
                        <th>Itbis</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var articulos in articulos)
                    {
                        <tr>
                            <td>@articulos.ArticuloId</td>
                            <td>@articulos.Descripcion</td>
                            <td>@articulos.PctItbis</td>
                            <td>@articulos.Costo</td>
                            <td>@articulos.Itbis</td>
                            <td><button class="bi bi-pencil btn btn-outline-success" @onclick="()=>Editar(articulos.ArticuloId)"></button></td>
                            <td><button class="bi bi-trash btn btn-outline-danger" @onclick="()=>Eliminar(articulos.ArticuloId)"></button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @*Footer*@
        <div class="card-footer">
            <p><strong>Total de Articulos: @articulos.Count()</strong></p>
        </div>
    </div>
</div>

@code {
    public List<Articulos> articulos = new List<Articulos>();
    public Articulos articulos1 = new Articulos();
    private string filtro = "";
    private string valorFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(5000);
        articulos = await articuloService.GetAllAsync();
        articulos1 = await articuloService.GetByIdAsync(2);

        if (articulos1 == null)
        {
            // Manejar el caso donde no se encuentra el artículo
            Console.WriteLine("Artículo no encontrado.");
        }


    }

    private async Task Restablecer()
    {
        filtro = string.Empty;
        valorFiltro = string.Empty;
        articulos = await articuloService.GetAllAsync();
    }

    public void Crear()
    {
        Navigation.NavigateTo("/Articulo/Create");
    }

    public void Editar(int id)
    {
        Navigation.NavigateTo($"/Articulo/Edit/{id}");
    }

    public void Eliminar(int id)
    {
        Navigation.NavigateTo($"/Articulo/Delete/{id}");
    }

    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}